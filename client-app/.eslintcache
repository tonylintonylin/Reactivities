[{"C:\\Users\\tonyl\\Desktop\\Reactivities\\client-app\\src\\reportWebVitals.ts":"1","C:\\Users\\tonyl\\Desktop\\Reactivities\\client-app\\src\\index.tsx":"2","C:\\Users\\tonyl\\Desktop\\Reactivities\\client-app\\src\\app\\layout\\App.tsx":"3","C:\\Users\\tonyl\\Desktop\\Reactivities\\client-app\\src\\app\\models\\activity.ts":"4","C:\\Users\\tonyl\\Desktop\\Reactivities\\client-app\\src\\features\\nav\\NavBar.tsx":"5","C:\\Users\\tonyl\\Desktop\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx":"6","C:\\Users\\tonyl\\Desktop\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx":"7","C:\\Users\\tonyl\\Desktop\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx":"8","C:\\Users\\tonyl\\Desktop\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx":"9","C:\\Users\\tonyl\\Desktop\\Reactivities\\client-app\\src\\app\\api\\agent.ts":"10","C:\\Users\\tonyl\\Desktop\\Reactivities\\client-app\\src\\app\\layout\\LoadingComponent.tsx":"11","C:\\Users\\tonyl\\Desktop\\Reactivities\\client-app\\src\\app\\stores\\ActivityStore.ts":"12"},{"size":425,"mtime":1607042456558,"results":"13","hashOfConfig":"14"},{"size":472,"mtime":1607105972073,"results":"15","hashOfConfig":"14"},{"size":3126,"mtime":1607115151984,"results":"16","hashOfConfig":"14"},{"size":163,"mtime":1607100947555,"results":"17","hashOfConfig":"14"},{"size":697,"mtime":1607100174921,"results":"18","hashOfConfig":"14"},{"size":2109,"mtime":1607115365779,"results":"19","hashOfConfig":"14"},{"size":1896,"mtime":1607115382267,"results":"20","hashOfConfig":"14"},{"size":1274,"mtime":1607100615596,"results":"21","hashOfConfig":"14"},{"size":2887,"mtime":1607107221044,"results":"22","hashOfConfig":"14"},{"size":1191,"mtime":1607105725187,"results":"23","hashOfConfig":"14"},{"size":326,"mtime":1607106156159,"results":"24","hashOfConfig":"14"},{"size":758,"mtime":1607115313403,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"sikvca",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\tonyl\\Desktop\\Reactivities\\client-app\\src\\reportWebVitals.ts",[],["54","55"],"C:\\Users\\tonyl\\Desktop\\Reactivities\\client-app\\src\\index.tsx",[],"C:\\Users\\tonyl\\Desktop\\Reactivities\\client-app\\src\\app\\layout\\App.tsx",["56","57"],"import \"semantic-ui-css/semantic.min.css\";\nimport agent from \"../api/agent\";\n\nimport React, { useState, useEffect, SyntheticEvent, useContext } from \"react\";\nimport ActivityStore from \"../stores/ActivityStore\";\n\nimport { Container } from \"semantic-ui-react\";\nimport { IActivity } from \"../models/activity\";\nimport { NavBar } from \"../../features/nav/NavBar\";\nimport { ActivityDashboard } from \"../../features/activities/dashboard/ActivityDashboard\";\nimport { LoadingComponent } from \"./LoadingComponent\";\nimport { observer } from \"mobx-react-lite\";\n\nconst App = () => {\n  const activityStore = useContext(ActivityStore);\n  const [activities, setActivities] = useState<IActivity[]>([]);\n  const [selectedActivity, setSelectedActivity] = useState<IActivity | null>(\n    null\n  );\n\n  const [editMode, setEditMode] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [submitting, setSubmitting] = useState(false);\n  const [target, setTarget] = useState(\"\");\n\n  const handleSelectActivity = (id: string) => {\n    setSelectedActivity(activities.filter((a) => a.id === id)[0]);\n    setEditMode(false);\n  };\n\n  const handleOpenCreateForm = () => {\n    setSelectedActivity(null);\n    setEditMode(true);\n  };\n\n  const handleCreateActivity = (activity: IActivity) => {\n    setSubmitting(true);\n    agent.Activities.create(activity)\n      .then(() => {\n        setActivities([...activities, activity]);\n        setSelectedActivity(activity);\n        setEditMode(false);\n      })\n      .then(() => setSubmitting(false));\n  };\n\n  const handleEditActivity = (activity: IActivity) => {\n    setSubmitting(true);\n    agent.Activities.update(activity)\n      .then(() => {\n        setActivities([\n          ...activities.filter((a) => a.id !== activity.id),\n          activity,\n        ]);\n        setSelectedActivity(activity);\n        setEditMode(false);\n      })\n      .then(() => setSubmitting(false));\n  };\n\n  const handleDeleteActivity = (\n    event: SyntheticEvent<HTMLButtonElement>,\n    id: string\n  ) => {\n    setTarget(event.currentTarget.name);\n    setSubmitting(true);\n    agent.Activities.delete(id)\n      .then(() => {\n        setActivities([...activities.filter((a) => a.id !== id)]);\n      })\n      .then(() => setSubmitting(false));\n  };\n\n  useEffect(() => {\n    activityStore.loadActivities();\n  }, [activityStore]);\n\n  if (activityStore.loadingInitial)\n    return <LoadingComponent content=\"Loading activities...\" />;\n\n  return (\n    <>\n      <NavBar openCreateForm={handleOpenCreateForm} />\n      <Container style={{ marginTop: \"7em\" }}>\n        <ActivityDashboard\n          activities={activityStore.activities}\n          selectActivity={handleSelectActivity}\n          selectedActivity={selectedActivity}\n          editMode={editMode}\n          setEditMode={setEditMode}\n          setSelectedActivity={setSelectedActivity}\n          createActivity={handleCreateActivity}\n          editActivity={handleEditActivity}\n          deleteActivity={handleDeleteActivity}\n          submitting={submitting}\n          target={target}\n        />\n      </Container>\n    </>\n  );\n};\n\nexport default observer(App);\n","C:\\Users\\tonyl\\Desktop\\Reactivities\\client-app\\src\\app\\models\\activity.ts",[],["58","59"],"C:\\Users\\tonyl\\Desktop\\Reactivities\\client-app\\src\\features\\nav\\NavBar.tsx",[],"C:\\Users\\tonyl\\Desktop\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx",[],"C:\\Users\\tonyl\\Desktop\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx",[],"C:\\Users\\tonyl\\Desktop\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx",[],"C:\\Users\\tonyl\\Desktop\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx",[],"C:\\Users\\tonyl\\Desktop\\Reactivities\\client-app\\src\\app\\api\\agent.ts",["60"],"import axios, { AxiosResponse } from \"axios\";\r\nimport { IActivity } from \"../models/activity\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:5000/api\";\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\nconst sleep = (ms: number) => (response: AxiosResponse) =>\r\n  new Promise<AxiosResponse>((resolve) =>\r\n    setTimeout(() => resolve(response), ms)\r\n  );\r\n\r\nconst requests = {\r\n  get: (url: string) => axios.get(url).then(sleep(1000)).then(responseBody),\r\n  post: (url: string, body: {}) =>\r\n    axios.post(url, body).then(sleep(1000)).then(responseBody),\r\n  put: (url: string, body: {}) =>\r\n    axios.put(url, body).then(sleep(1000)).then(responseBody),\r\n  del: (url: string) => axios.delete(url).then(sleep(1000)).then(responseBody),\r\n};\r\n\r\nconst Activities = {\r\n  list: (): Promise<IActivity[]> => requests.get(\"/activities\"),\r\n  details: (id: string) => requests.get(`/activities/${id}`),\r\n  create: (activity: IActivity) => requests.post(`/activities`, activity),\r\n  update: (activity: IActivity) =>\r\n    requests.put(`/activities/${activity.id}`, activity),\r\n  delete: (id: string) => requests.del(`/activities/${id}`),\r\n};\r\n\r\nexport default {\r\n  Activities,\r\n};\r\n","C:\\Users\\tonyl\\Desktop\\Reactivities\\client-app\\src\\app\\layout\\LoadingComponent.tsx",[],"C:\\Users\\tonyl\\Desktop\\Reactivities\\client-app\\src\\app\\stores\\ActivityStore.ts",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":22,"column":10,"nodeType":"67","messageId":"68","endLine":22,"endColumn":17},{"ruleId":"65","severity":1,"message":"69","line":22,"column":19,"nodeType":"67","messageId":"68","endLine":22,"endColumn":29},{"ruleId":"61","replacedBy":"70"},{"ruleId":"63","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":31,"column":1,"nodeType":"74","endLine":33,"endColumn":3},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"@typescript-eslint/no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'setLoading' is assigned a value but never used.",["75"],["76"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]